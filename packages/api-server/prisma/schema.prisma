datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                   String    @id @default(cuid())
  name                 String
  email                String    @unique
  passwordHash         String
  avatar               String?
  passwordResetToken   String?
  passwordResetExpires DateTime?

  accounts     Account[]
  categories   Category[]
  transactions Transaction[]
}

model Account {
  id      String  @id @default(cuid())
  userId  String
  name    String
  bank    String
  balance Decimal

  transactions Transaction[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Category {
  id       String @id @default(cuid())
  userId   String
  bucketId String
  name     String

  targets      Target[]
  transactions Transaction[]

  user           User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryBucket CategoryBucket @relation(fields: [bucketId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([bucketId])
}

model CategoryBucket {
  id   String @id @default(cuid())
  name String

  categories Category[]
}

model Target {
  date       DateTime
  target     Int
  categoryId String

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([date, categoryId])
  @@index([categoryId])
}

model Transaction {
  id          String   @id @default(cuid())
  userId      String
  accountId   String
  categoryId  String
  date        DateTime @default(now())
  contact     String
  description String
  amount      Int

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  account  Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id])

  @@index([userId])
  @@index([accountId])
  @@index([categoryId])
}
